{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Coding\\\\react\\\\habit-tracker\\\\src\\\\app.jsx\";\nimport \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habits: [{\n        id: 1,\n        name: \"Reading\",\n        count: 0\n      }, {\n        id: 2,\n        name: \"Dancing\",\n        count: 0\n      }, {\n        id: 3,\n        name: \"Coding\",\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      habits[index].count++; //오브젝트를 직접 수정해서 좋지 않은 예입니다.\n      // this.setState({habits:habits});\n      // key와 value가 같다면 아래처럼 쓸수 있습니다.\n\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDecrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      habits[index].count = count < 0 ? 0 : count;\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDelete = habit => {\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleAdd = name => {\n      const habits = [...this.state.habits, {\n        id: Date.now(),\n        name,\n        count: 0\n      }];\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleReset = () => {\n      const habits = this.state.habits.map(item => {\n        item.count = 0;\n      });\n      this.setState({\n        habits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        totalCount: this.state.habits.filter(item => item.count > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Habits, {\n        habits: this.state.habits,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        onDelete: this.handleDelete,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Program Files/Coding/react/habit-tracker/src/app.jsx"],"names":["Habits","Navbar","React","Component","App","state","habits","id","name","count","handleIncrement","habit","index","indexOf","setState","handleDecrement","handleDelete","filter","item","handleAdd","Date","now","handleReset","map","render","length"],"mappings":"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","sourcesContent":["import \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Dancing\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n  handleIncrement = (habit) => {\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    habits[index].count++; //오브젝트를 직접 수정해서 좋지 않은 예입니다.\n    // this.setState({habits:habits});\n    // key와 value가 같다면 아래처럼 쓸수 있습니다.\n    this.setState({ habits });\n  };\n  handleDecrement = (habit) => {\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    const count = habits[index].count - 1;\n    habits[index].count = count < 0 ? 0 : count;\n    this.setState({ habits });\n  };\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n  handleReset = () => {\n    const habits = this.state.habits.map((item) => {\n      item.count = 0;\n    });\n    this.setState({ habits });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n        ;\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}