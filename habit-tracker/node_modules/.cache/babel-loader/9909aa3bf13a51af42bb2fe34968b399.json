{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Coding\\\\react\\\\habit-tracker\\\\src\\\\components\\\\habits.jsx\";\nimport React, { Component } from \"react\";\nimport Habit from \"./habit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Habits extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleIncrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      habits[index].count++; //오브젝트를 직접 수정해서 좋지 않은 예입니다.\n      // this.setState({habits:habits});\n      // key와 value가 같다면 아래처럼 쓸수 있습니다.\n\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDecrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      habits[index].count = count < 0 ? 0 : count;\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDelete = habit => {\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({\n        habits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.habits.map(habit => /*#__PURE__*/_jsxDEV(Habit, {\n        habit: habit,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        onDelete: this.handleDelete\n      }, habit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Habits;","map":{"version":3,"sources":["C:/Program Files/Coding/react/habit-tracker/src/components/habits.jsx"],"names":["React","Component","Habit","Habits","handleIncrement","habit","habits","state","index","indexOf","count","setState","handleDecrement","handleDelete","filter","item","id","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7BG,eAD6B,GACVC,KAAD,IAAW;AAC3B,YAAMC,MAAM,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWD,MAAf,CAAf;AACA,YAAME,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeJ,KAAf,CAAd;AACAC,MAAAA,MAAM,CAACE,KAAD,CAAN,CAAcE,KAAd,GAH2B,CAGJ;AACvB;AACA;;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAR4B;;AAAA,SAS7BM,eAT6B,GASVP,KAAD,IAAW;AAC3B,YAAMC,MAAM,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWD,MAAf,CAAf;AACA,YAAME,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeJ,KAAf,CAAd;AACA,YAAMK,KAAK,GAAGJ,MAAM,CAACE,KAAD,CAAN,CAAcE,KAAd,GAAsB,CAApC;AACAJ,MAAAA,MAAM,CAACE,KAAD,CAAN,CAAcE,KAAd,GAAsBA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAtC;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAf4B;;AAAA,SAgB7BO,YAhB6B,GAgBbR,KAAD,IAAW;AACxB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,CAAkBQ,MAAlB,CAA0BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYX,KAAK,CAACW,EAArD,CAAf;AACA,WAAKL,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAnB4B;AAAA;;AAoB7BW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKV,KAAL,CAAWD,MAAX,CAAkBY,GAAlB,CAAuBb,KAAD,iBACrB,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,WAAW,EAAE,KAAKD,eAHpB;AAIE,QAAA,WAAW,EAAE,KAAKQ,eAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKC;AALjB,SACOR,KAAK,CAACW,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAlC4B;;AAqC/B,eAAeb,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Habit from \"./habit\";\r\n\r\nclass Habits extends Component {\r\n  handleIncrement = (habit) => {\r\n    const habits = [...this.state.habits];\r\n    const index = habits.indexOf(habit);\r\n    habits[index].count++; //오브젝트를 직접 수정해서 좋지 않은 예입니다.\r\n    // this.setState({habits:habits});\r\n    // key와 value가 같다면 아래처럼 쓸수 있습니다.\r\n    this.setState({ habits });\r\n  };\r\n  handleDecrement = (habit) => {\r\n    const habits = [...this.state.habits];\r\n    const index = habits.indexOf(habit);\r\n    const count = habits[index].count - 1;\r\n    habits[index].count = count < 0 ? 0 : count;\r\n    this.setState({ habits });\r\n  };\r\n  handleDelete = (habit) => {\r\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\r\n    this.setState({ habits });\r\n  };\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.state.habits.map((habit) => (\r\n          <Habit\r\n            key={habit.id}\r\n            habit={habit}\r\n            onIncrement={this.handleIncrement}\r\n            onDecrement={this.handleDecrement}\r\n            onDelete={this.handleDelete}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habits;\r\n"]},"metadata":{},"sourceType":"module"}